<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>auto</title>
        <link>https://intuit.github.io/auto</link>
        <description>The auto blog feed.</description>
        <lastBuildDate>Mon, 03 May 2021 16:07:34 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <image>
            <title>auto</title>
            <url>https://intuit.github.io/auto/logo.svg</url>
            <link>https://intuit.github.io/auto</link>
        </image>
        <copyright>All rights reserved 2021, </copyright>
        <item>
            <title><![CDATA[Stress-free Continuous Delivery with auto]]></title>
            <link>https://intuit.github.io/auto/blog/using-shipit</link>
            <guid>https://intuit.github.io/auto/blog/using-shipit</guid>
            <pubDate>Fri, 13 Mar 2020 06:00:02 GMT</pubDate>
            <content:encoded><![CDATA[<div class="mx-auto text-center flex flex-col items-center"><img src="//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40" class="rounded-full border-2 border-gray-200 dark:border-gray-900 w-12 h-12 -mt-12 mb-4"><h1 class="lvl1 text-3xl font-light mb-2 lg:mb-4 dark:text-gray-200">Stress-free Continuous Delivery with auto</h1><p class="mb-6"><span class="dark:text-gray-300">Andrew Lisowski</span> <time class="text-gray-600 dark:text-gray-500" datetime="Thu, 12 Mar 2020 23:00:02 -0700">on <!-- -->Mar 12, 2020</time></p></div><p class="my-4 text-gray-800 dark:text-gray-300"><code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> makes releasing your code a breeze. Instead of manually calculating a version and doing your whole release process manually, <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> takes care of it for you.</p><p class="my-4 text-gray-800 dark:text-gray-300">The main command most users use to interact with <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> is the shipit command. shipit does all the heaving lifting when releasing your code.</p><p class="my-4 text-gray-800 dark:text-gray-300">When run on <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">baseBranch</code> it will:</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300">Determine if the last merged PR needs to be released</li><li class="my-4 text-gray-800 dark:text-gray-300">Update a CHANGELOG.md with all you new changes</li><li class="my-4 text-gray-800 dark:text-gray-300">Publish to NPM</li><li class="my-4 text-gray-800 dark:text-gray-300">Make a release on GitHub and mark it as latest</li></ol><p class="my-4 text-gray-800 dark:text-gray-300">When run from a PR or locally it will create a canary version.</p><hr class="m-12 border-b-2 dark:border-gray-700"><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="how-does-it-work"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#how-does-it-work">How does it&nbsp;work?</a></h2><p class="my-4 text-gray-800 dark:text-gray-300"><code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> does all this magic through GitHub labels. This makes managing outside contribution super easy. Contributors code, you determine the appropriate label, and <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> takes care of the rest.</p><p class="my-4 text-gray-800 dark:text-gray-300">There are a few types of labels:</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300">Release Labels</li><li class="my-4 text-gray-800 dark:text-gray-300">Changelog Labels</li><li class="my-4 text-gray-800 dark:text-gray-300">Arbitrary labels</li></ol><hr class="m-12 border-b-2 dark:border-gray-700"><h3 class="lvl3 break-words text-xl relative font-bold mt-6 lg:text-2xl lg:font-semibold text-gray-900 dark:text-gray-200" id="release-labels"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#release-labels">Release Labels</a></h3><p class="my-4 text-gray-800 dark:text-gray-300">These labels will help you release semantically versioned packages. If no label is present <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> assumes the PR is a patch.</p><ul class="my-6 ul"><li class="my-4 text-gray-800 dark:text-gray-300">major: The PR changes the public API in some way. Create a major release</li><li class="my-4 text-gray-800 dark:text-gray-300">minor: The PR adds a feature to the public API. Create a minor release</li><li class="my-4 text-gray-800 dark:text-gray-300">patch: The PR fixes a bug. Create a patch release</li><li class="my-4 text-gray-800 dark:text-gray-300">skip-release: The PR should not be released. This labels can be used in conjunction with the previous labels for when the PR is actually released</li><li class="my-4 text-gray-800 dark:text-gray-300">internal: Changes only effect how the app is structured or something that doesn't effect the user. This counts as a patch release</li></ul><h3 class="lvl3 break-words text-xl relative font-bold mt-6 lg:text-2xl lg:font-semibold text-gray-900 dark:text-gray-200" id="changelog-labels"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#changelog-labels">Changelog Labels</a></h3><p class="my-4 text-gray-800 dark:text-gray-300">These labels can be used to make your changelogs more expressive. Add them to PRs with release labels to override what changelog section the changes display in. Or use them on their own to just create a patch release.</p><p class="my-4 text-gray-800 dark:text-gray-300">You can configure more changelog sections, read more here.</p><h3 class="lvl3 break-words text-xl relative font-bold mt-6 lg:text-2xl lg:font-semibold text-gray-900 dark:text-gray-200" id="arbitrary-labels"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#arbitrary-labels">Arbitrary labels</a></h3><p class="my-4 text-gray-800 dark:text-gray-300"><code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> doesn't use any extra labels, but you can use whatever labels to power more <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code>mated workflows with <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> label. This command will return the labels for a PR. Using that information you can choose to run extra CI jobs.</p><p class="my-4 text-gray-800 dark:text-gray-300">For example,. the following will only run the test:visual script when the PR has has the Visual label.</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-bash syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#D73A49">export</span><span style="color:#24292E"> PATH=</span><span style="color:#032F62">$(npm bin)</span><span style="color:#24292E">:$PATH</span>
<!-- -->
<span style="color:#D73A49">if</span><span style="color:#24292E"> auto label --pr $PR_NUMBER --exists Visual</span><span style="color:#D73A49">;</span>
<span style="color:#D73A49">then</span>
<span style="color:#24292E">    npm run test:visual</span>
<span style="color:#D73A49">fi</span>
</code><code class="language-bash syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#F97583">export</span><span style="color:#E1E4E8"> PATH=</span><span style="color:#9ECBFF">$(npm bin)</span><span style="color:#E1E4E8">:$PATH</span>
<!-- -->
<span style="color:#F97583">if</span><span style="color:#E1E4E8"> auto label --pr $PR_NUMBER --exists Visual</span><span style="color:#F97583">;</span>
<span style="color:#F97583">then</span>
<span style="color:#E1E4E8">    npm run test:visual</span>
<span style="color:#F97583">fi</span>
</code></pre><hr class="m-12 border-b-2 dark:border-gray-700"><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="wrapping-up"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#wrapping-up">Wrapping Up</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">Now that you know all of the above, you have all you need to release every build as the correct version. No longer worry what tag to publish to or what version. You should never really have to run <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> yourself, the CI will do that on each build!</p><p class="my-4 text-gray-800 dark:text-gray-300">All you have to know is what the labels are and when to use them.</p><p class="my-4 text-gray-800 dark:text-gray-300">If you have any questions about how to use <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> feel free to ask! I hope you guys enjoy the automated release process! 🎁</p>]]></content:encoded>
            <author>lisowski54@gmail.com (Andrew Lisowski)</author>
            <enclosure url="https://images.unsplash.com/photo-1556473062-062e556b0920?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80" length="0" type="image//photo-1556473062-062e556b0920"/>
        </item>
        <item>
            <title><![CDATA[npm: More Secure Canary Publishing]]></title>
            <link>https://intuit.github.io/auto/blog/npm-canary-scope</link>
            <guid>https://intuit.github.io/auto/blog/npm-canary-scope</guid>
            <pubDate>Fri, 13 Mar 2020 06:00:02 GMT</pubDate>
            <content:encoded><![CDATA[<div class="mx-auto text-center flex flex-col items-center"><img src="//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40" class="rounded-full border-2 border-gray-200 dark:border-gray-900 w-12 h-12 -mt-12 mb-4"><h1 class="lvl1 text-3xl font-light mb-2 lg:mb-4 dark:text-gray-200">npm: More Secure Canary Publishing</h1><p class="mb-6"><span class="dark:text-gray-300">Andrew Lisowski</span> <time class="text-gray-600 dark:text-gray-500" datetime="Thu, 12 Mar 2020 23:00:02 -0700">on <!-- -->Mar 12, 2020</time></p></div><p class="my-4 text-gray-800 dark:text-gray-300">Publishing canary versions comes with some security risks.
If your project is private you have nothing to worry about, but if your project is open source there are some security holes.</p><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="attack-vectors"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#attack-vectors">Attack Vectors</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">Depending on the build platform you might be able to pass secrets to PR builds for forked repos.
While this makes the developer experience of your project nice, in <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code>'s case publishing canary versions, it exposes your keys.</p><p class="my-4 text-gray-800 dark:text-gray-300">An attacker could:</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300">print secrets</li><li class="my-4 text-gray-800 dark:text-gray-300">send secrets to some server</li><li class="my-4 text-gray-800 dark:text-gray-300">modify <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> to publish to the latest tag instead of <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">canary</code></li></ol><p class="my-4 text-gray-800 dark:text-gray-300">No amount of code can fix these problems.
If your release keys are in everyone's CI builds an attacker can do any number of things to modify what you intend for <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> to do (or any other release method run in the CI).</p><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="solution"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#solution">Solution</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">The solution for this is actually quite simple:</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300">Create a test scope that you publish canaries under (ex: <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">@auto-canary</code> or <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">@auto-test</code>)</li><li class="my-4 text-gray-800 dark:text-gray-300">Create a user that only has access to that scope</li><li class="my-4 text-gray-800 dark:text-gray-300">Set the default <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">NPM_TOKEN</code> to a token that can publish to that scope (this is used for any pull request)</li><li class="my-4 text-gray-800 dark:text-gray-300">Set up a <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">secure</code> token that is only accessible on the main fork (still named <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">NPM_TOKEN</code>)</li></ol><p class="my-4 text-gray-800 dark:text-gray-300">Step 3 might not be possible on your build platform.</p><p class="my-4 text-gray-800 dark:text-gray-300">The following are the ways the <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> team knows how to do it.
If you do not see the method for you build platform, please make a pull request!</p><ul class="my-6 ul"><li class="my-4 text-gray-800 dark:text-gray-300"><a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://circleci.com/docs/2.0/contexts/">CircleCI Context</a> - Contexts provide a mechanism for securing and sharing environment variables across projects. The environment variables are defined as name/value pairs and are injected at runtime.</li></ul><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="usage"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#usage">Usage</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">To use this work flow in <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code>, supply the following configuration to the <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">npm</code> plugin.</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"plugins"</span><span style="color:#24292E">: [</span>
<span style="color:#24292E">    [</span>
<span style="color:#24292E">      </span><span style="color:#032F62">"npm"</span><span style="color:#24292E">,</span>
<span style="color:#24292E">      {</span>
<span style="color:#24292E">        </span><span style="color:#005CC5">"canaryScope"</span><span style="color:#24292E">: </span><span style="color:#032F62">"@auto-canary"</span>
<span style="color:#24292E">      }</span>
<span style="color:#24292E">    ]</span>
<span style="color:#24292E">  ]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"plugins"</span><span style="color:#E1E4E8">: [</span>
<span style="color:#E1E4E8">    [</span>
<span style="color:#E1E4E8">      </span><span style="color:#9ECBFF">"npm"</span><span style="color:#E1E4E8">,</span>
<span style="color:#E1E4E8">      {</span>
<span style="color:#E1E4E8">        </span><span style="color:#79B8FF">"canaryScope"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"@auto-canary"</span>
<span style="color:#E1E4E8">      }</span>
<span style="color:#E1E4E8">    ]</span>
<span style="color:#E1E4E8">  ]</span>
<span style="color:#E1E4E8">}</span>
</code></pre><p class="my-4 text-gray-800 dark:text-gray-300">Now when people make pull requests to your repos:</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300">your CI can run <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto shipit</code></li><li class="my-4 text-gray-800 dark:text-gray-300">the canary versions will get published under your <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">canaryScope</code></li></ol>]]></content:encoded>
            <author>lisowski54@gmail.com (Andrew Lisowski)</author>
            <enclosure url="https://images.unsplash.com/photo-1566386087068-55645996b234?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=500&ixid=eyJhcHBfaWQiOjF9&ixlib=rb-1.2.1&q=80&w=1950" length="0" type="image//photo-1566386087068-55645996b234"/>
        </item>
        <item>
            <title><![CDATA[Announcing "auto" 8.0.0]]></title>
            <link>https://intuit.github.io/auto/blog/v8</link>
            <guid>https://intuit.github.io/auto/blog/v8</guid>
            <pubDate>Fri, 13 Mar 2020 06:00:02 GMT</pubDate>
            <content:encoded><![CDATA[<div class="mx-auto text-center flex flex-col items-center"><img src="//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40" class="rounded-full border-2 border-gray-200 dark:border-gray-900 w-12 h-12 -mt-12 mb-4"><h1 class="lvl1 text-3xl font-light mb-2 lg:mb-4 dark:text-gray-200">Announcing "auto" 8.0.0</h1><p class="mb-6"><span class="dark:text-gray-300">Andrew Lisowski</span> <time class="text-gray-600 dark:text-gray-500" datetime="Thu, 12 Mar 2020 23:00:02 -0700">on <!-- -->Mar 12, 2020</time></p></div><p class="my-4 text-gray-800 dark:text-gray-300">We are excited to announce the release of <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> 8.0.0.
This release brings a new command <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">next</code>, a new use for <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">shipit</code>, more powerful label configuration, and more.</p><p class="my-4 text-gray-800 dark:text-gray-300">If you are unfamiliar, <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> is a CLI tool which helps you version your code and automate any part of your release pipeline.
<code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code>'s main use is for automating your versioning with <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://semver.org/">semantic versioning</a> and <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/">GitHub</a> pull request labels.
It handles determining the next version, creating changelogs, publishing to package managers, publishing <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://help.github.com/en/github/administering-a-repository/about-releases">GitHub Releases</a>, and so much more through plugins.</p><p class="my-4 text-gray-800 dark:text-gray-300">If you aren't already using <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> you can either install it through npm:</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-bash syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">npm install auto</span>
</code><code class="language-bash syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">npm install auto</span>
</code></pre><p class="my-4 text-gray-800 dark:text-gray-300">Or if you are publishing to something other than npm:</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-bash syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#6A737D"># On OSX</span>
<span style="color:#24292E">brew tap intuit/auto https://github.com/intuit/auto</span>
<span style="color:#24292E">brew install auto</span>
<!-- -->
<span style="color:#6A737D"># Or other OSs</span>
<span style="color:#6A737D"># Download a platform specific version of auto</span>
<span style="color:#24292E">curl -vkL -o - https://github.com/intuit/auto/releases/download/v8.0.0/auto-linux.gz </span><span style="color:#D73A49">|</span><span style="color:#24292E"> gunzip </span><span style="color:#D73A49">&gt;</span><span style="color:#24292E"> </span><span style="color:#D73A49">~</span><span style="color:#24292E">/auto</span>
<span style="color:#6A737D"># Make auto executable</span>
<span style="color:#24292E">chmod a+x </span><span style="color:#D73A49">~</span><span style="color:#24292E">/auto</span>
</code><code class="language-bash syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#6A737D"># On OSX</span>
<span style="color:#E1E4E8">brew tap intuit/auto https://github.com/intuit/auto</span>
<span style="color:#E1E4E8">brew install auto</span>
<!-- -->
<span style="color:#6A737D"># Or other OSs</span>
<span style="color:#6A737D"># Download a platform specific version of auto</span>
<span style="color:#E1E4E8">curl -vkL -o - https://github.com/intuit/auto/releases/download/v8.0.0/auto-linux.gz </span><span style="color:#F97583">|</span><span style="color:#E1E4E8"> gunzip </span><span style="color:#F97583">&gt;</span><span style="color:#E1E4E8"> </span><span style="color:#F97583">~</span><span style="color:#E1E4E8">/auto</span>
<span style="color:#6A737D"># Make auto executable</span>
<span style="color:#E1E4E8">chmod a+x </span><span style="color:#F97583">~</span><span style="color:#E1E4E8">/auto</span>
</code></pre><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="next-command"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#next-command"><code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">next</code> Command</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">This new command will make a preview release of your code. This entails:</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300">Creating a prerelease on package management platform (supported by <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">npm</code> and <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">git-tag</code> plugins)</li><li class="my-4 text-gray-800 dark:text-gray-300">Creating a tag and "Pre Release" on GitHub releases page</li></ol><p class="my-4 text-gray-800 dark:text-gray-300">The only prerelease branch <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> comes configured with is <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">next</code>.
You can configure as many branches as you want with the <a class="focus-visible:ring ring-offset-2 focus:outline-none rounded underline cursor-pointer text-gray-800 dark:text-gray-300" href="../pages/autorc#prerelease-branches">prereleaseBranches</a> <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">.autorc</code> option.
If your package manager plugin supports release tags, such as the <a class="focus-visible:ring ring-offset-2 focus:outline-none rounded underline cursor-pointer text-gray-800 dark:text-gray-300" href="../generated/npm">npm</a> plugin, <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> will publish the prerelease branch to a tag of the same name.
Calling <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto next</code> from a one of these branches will publish a prerelease, otherwise it will publish to your default prerelease branch/tag.</p><h3 class="lvl3 break-words text-xl relative font-bold mt-6 lg:text-2xl lg:font-semibold text-gray-900 dark:text-gray-200" id="example-usage"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#example-usage">Example Usage</a></h3><p class="my-4 text-gray-800 dark:text-gray-300">Given the following configuration:</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"prereleaseBranches"</span><span style="color:#24292E">: [</span><span style="color:#032F62">"beta"</span><span style="color:#24292E">]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"prereleaseBranches"</span><span style="color:#E1E4E8">: [</span><span style="color:#9ECBFF">"beta"</span><span style="color:#E1E4E8">]</span>
<span style="color:#E1E4E8">}</span>
</code></pre><p class="my-4 text-gray-800 dark:text-gray-300">Run <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto next</code> from <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">beta</code> branch =&gt; Publish prerelease to <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">beta</code> tag.
Run <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto next</code> from <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">feature</code> branch =&gt; Publish prerelease to <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">beta</code> tag.</p><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="prerelease-branches-with-shipit"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#prerelease-branches-with-shipit">Prerelease Branches with <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">shipit</code></a></h2><p class="my-4 text-gray-800 dark:text-gray-300">The <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">shipit</code> command will now also publish a prerelease when ran from a prerelease branch. You can use this in a few different ways:</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300">Two release branches: <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">baseBranch</code> and <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">next</code></li><li class="my-4 text-gray-800 dark:text-gray-300">Without <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">next</code> Branch (<code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">--only-graduate-with-release-label</code>)</li><li class="my-4 text-gray-800 dark:text-gray-300">Multiple <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">next</code> Branches (ex: <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">alpha</code>, <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">beta</code>, <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">rc</code>)</li><li class="my-4 text-gray-800 dark:text-gray-300">Feature Pre-releases</li></ol><p class="my-4 text-gray-800 dark:text-gray-300">Read more <a class="focus-visible:ring ring-offset-2 focus:outline-none rounded underline cursor-pointer text-gray-800 dark:text-gray-300" href="../docs/generated/shipit#prereleases">here</a>.</p><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="label-configuration"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#label-configuration">Label Configuration</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">Label configuration just got a whole lot simpler 🎉.</p><ol class="my-6 ol"><li class="my-4 text-gray-800 dark:text-gray-300"><p class="my-4 text-gray-800 dark:text-gray-300">Labels can now only be supplied as an array of label objects.</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"labels"</span><span style="color:#24292E">: [</span>
<span style="color:#24292E">    { </span><span style="color:#005CC5">"releaseType"</span><span style="color:#24292E">: </span><span style="color:#032F62">"major"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"name"</span><span style="color:#24292E">: </span><span style="color:#032F62">"Version: Major"</span><span style="color:#24292E"> },</span>
<span style="color:#24292E">    { </span><span style="color:#005CC5">"releaseType"</span><span style="color:#24292E">: </span><span style="color:#032F62">"minor"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"name"</span><span style="color:#24292E">: </span><span style="color:#032F62">"Version: Minor"</span><span style="color:#24292E"> },</span>
<span style="color:#24292E">    { </span><span style="color:#005CC5">"releaseType"</span><span style="color:#24292E">: </span><span style="color:#032F62">"patch"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"name"</span><span style="color:#24292E">: </span><span style="color:#032F62">"Version: Patch"</span><span style="color:#24292E"> }</span>
<span style="color:#24292E">  ]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"labels"</span><span style="color:#E1E4E8">: [</span>
<span style="color:#E1E4E8">    { </span><span style="color:#79B8FF">"releaseType"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"major"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"name"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"Version: Major"</span><span style="color:#E1E4E8"> },</span>
<span style="color:#E1E4E8">    { </span><span style="color:#79B8FF">"releaseType"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"minor"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"name"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"Version: Minor"</span><span style="color:#E1E4E8"> },</span>
<span style="color:#E1E4E8">    { </span><span style="color:#79B8FF">"releaseType"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"patch"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"name"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"Version: Patch"</span><span style="color:#E1E4E8"> }</span>
<span style="color:#E1E4E8">  ]</span>
<span style="color:#E1E4E8">}</span>
</code></pre></li><li class="my-4 text-gray-800 dark:text-gray-300"><p class="my-4 text-gray-800 dark:text-gray-300">Instead of using <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">skipReleaseLabels</code> just set the label's <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">type</code> to <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">skip</code></p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"labels"</span><span style="color:#24292E">: [{ </span><span style="color:#005CC5">"releaseType"</span><span style="color:#24292E">: </span><span style="color:#032F62">"skip"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"name"</span><span style="color:#24292E">: </span><span style="color:#032F62">"NO!"</span><span style="color:#24292E"> }]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"labels"</span><span style="color:#E1E4E8">: [{ </span><span style="color:#79B8FF">"releaseType"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"skip"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"name"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"NO!"</span><span style="color:#E1E4E8"> }]</span>
<span style="color:#E1E4E8">}</span>
</code></pre></li><li class="my-4 text-gray-800 dark:text-gray-300"><p class="my-4 text-gray-800 dark:text-gray-300">Overwrite default labels using <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">overwrite</code></p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"labels"</span><span style="color:#24292E">: [</span>
<span style="color:#24292E">    { </span><span style="color:#005CC5">"releaseType"</span><span style="color:#24292E">: </span><span style="color:#032F62">"major"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"name"</span><span style="color:#24292E">: </span><span style="color:#032F62">"Version: Major"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"overwrite"</span><span style="color:#24292E">: </span><span style="color:#005CC5">true</span><span style="color:#24292E"> }</span>
<span style="color:#24292E">  ]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"labels"</span><span style="color:#E1E4E8">: [</span>
<span style="color:#E1E4E8">    { </span><span style="color:#79B8FF">"releaseType"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"major"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"name"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"Version: Major"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"overwrite"</span><span style="color:#E1E4E8">: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8"> }</span>
<span style="color:#E1E4E8">  ]</span>
<span style="color:#E1E4E8">}</span>
</code></pre></li><li class="my-4 text-gray-800 dark:text-gray-300"><p class="my-4 text-gray-800 dark:text-gray-300">Add <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">none</code> <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">releaseType</code>. This will act as a <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">skip-release</code> unless paired with a SEMVER label</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"labels"</span><span style="color:#24292E">: [{ </span><span style="color:#005CC5">"releaseType"</span><span style="color:#24292E">: </span><span style="color:#032F62">"none"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"name"</span><span style="color:#24292E">: </span><span style="color:#032F62">"documentation"</span><span style="color:#24292E"> }]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"labels"</span><span style="color:#E1E4E8">: [{ </span><span style="color:#79B8FF">"releaseType"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"none"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"name"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"documentation"</span><span style="color:#E1E4E8"> }]</span>
<span style="color:#E1E4E8">}</span>
</code></pre></li><li class="my-4 text-gray-800 dark:text-gray-300"><p class="my-4 text-gray-800 dark:text-gray-300">Changed <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">title</code> to <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">changelogTitle</code>.</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"labels"</span><span style="color:#24292E">: [{ </span><span style="color:#005CC5">"changelogTitle"</span><span style="color:#24292E">: </span><span style="color:#032F62">"New Docs Yo!"</span><span style="color:#24292E">, </span><span style="color:#005CC5">"name"</span><span style="color:#24292E">: </span><span style="color:#032F62">"documentation"</span><span style="color:#24292E"> }]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"labels"</span><span style="color:#E1E4E8">: [{ </span><span style="color:#79B8FF">"changelogTitle"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"New Docs Yo!"</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">"name"</span><span style="color:#E1E4E8">: </span><span style="color:#9ECBFF">"documentation"</span><span style="color:#E1E4E8"> }]</span>
<span style="color:#E1E4E8">}</span>
</code></pre></li></ol><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="upload-assets---globs"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#upload-assets---globs">Upload Assets - Globs</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">You might want to upload multiple files or you might not know the file-name (ex: a vscode extension w/ a version number in the name), but you know the pattern of the filenames that you want to upload.
So now you can use <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/mrmlnc/fast-glob#basic-syntax">globs</a>!</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"plugins"</span><span style="color:#24292E">: [[</span><span style="color:#032F62">"upload-assets"</span><span style="color:#24292E">, [</span><span style="color:#032F62">"./path/**/to/*.file"</span><span style="color:#24292E">]]]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"plugins"</span><span style="color:#E1E4E8">: [[</span><span style="color:#9ECBFF">"upload-assets"</span><span style="color:#E1E4E8">, [</span><span style="color:#9ECBFF">"./path/**/to/*.file"</span><span style="color:#E1E4E8">]]]</span>
<span style="color:#E1E4E8">}</span>
</code></pre><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="-other-notable-breaking-changes"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#-other-notable-breaking-changes">💥 Other Notable Breaking Changes</a></h2><h3 class="lvl3 break-words text-xl relative font-bold mt-6 lg:text-2xl lg:font-semibold text-gray-900 dark:text-gray-200" id="deprecate---very-verbose--w-flag"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#deprecate---very-verbose--w-flag">Deprecate <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">--very-verbose, -w</code> Flag</a></h3><p class="my-4 text-gray-800 dark:text-gray-300">Using -w for very verbose logs was a very odd choice on my part (two <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">v</code>s next to each other look like a <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">w</code> 😓).
Instead you can now just add another <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">-v</code> and get the very verbose logs!</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-bash syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#6A737D"># old</span>
<span style="color:#24292E">auto shipit -w</span>
<!-- -->
<span style="color:#6A737D"># new</span>
<span style="color:#24292E">auto shipit -vv</span>
<span style="color:#6A737D"># or</span>
<span style="color:#24292E">auto shipit --verbose --verbose</span>
</code><code class="language-bash syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#6A737D"># old</span>
<span style="color:#E1E4E8">auto shipit -w</span>
<!-- -->
<span style="color:#6A737D"># new</span>
<span style="color:#E1E4E8">auto shipit -vv</span>
<span style="color:#6A737D"># or</span>
<span style="color:#E1E4E8">auto shipit --verbose --verbose</span>
</code></pre><hr class="m-12 border-b-2 dark:border-gray-700"><p class="my-4 text-gray-800 dark:text-gray-300">We hope you enjoy the new ways you can release your code!</p><p class="my-4 text-gray-800 dark:text-gray-300">– Andrew Lisowski and the <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code> Team</p><p class="my-4 text-gray-800 dark:text-gray-300"><a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/intuit/auto/releases/tag/v8.0.0">View the full release notes</a>.</p>]]></content:encoded>
            <author>lisowski54@gmail.com (Andrew Lisowski)</author>
            <enclosure url="https://images.unsplash.com/photo-1485795046599-702122cd1267?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=500&ixid=eyJhcHBfaWQiOjF9&ixlib=rb-1.2.1&q=80&w=1950" length="0" type="image//photo-1485795046599-702122cd1267"/>
        </item>
        <item>
            <title><![CDATA[Merging PRs to other PRs]]></title>
            <link>https://intuit.github.io/auto/blog/pr-in-progress</link>
            <guid>https://intuit.github.io/auto/blog/pr-in-progress</guid>
            <pubDate>Fri, 13 Mar 2020 06:00:02 GMT</pubDate>
            <content:encoded><![CDATA[<div class="mx-auto text-center flex flex-col items-center"><img src="//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40" class="rounded-full border-2 border-gray-200 dark:border-gray-900 w-12 h-12 -mt-12 mb-4"><h1 class="lvl1 text-3xl font-light mb-2 lg:mb-4 dark:text-gray-200">Merging PRs to other PRs</h1><p class="mb-6"><span class="dark:text-gray-300">Andrew Lisowski</span> <time class="text-gray-600 dark:text-gray-500" datetime="Thu, 12 Mar 2020 23:00:02 -0700">on <!-- -->Mar 12, 2020</time></p></div><p class="my-4 text-gray-800 dark:text-gray-300">Sometimes you are working on a big feature and you know it will require a lot of changes. These types of pull requests can be a nightmare to review. Taking in all the changes at once can be overwhelming. It makes it easy to miss smaller mistakes and can make it hard to guess the intent of the changes. Multiple features, bug fixes, or even breaking changes may make up this large PR.</p><p class="my-4 text-gray-800 dark:text-gray-300">One way to manage this problem is by making a PR to the large PR. Other contributors can review a smaller subset of changes and also follow along with development. In previous versions of <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">auto</code>, large PRs would not be represented well in the changelog and release notes. It would only include the main PR that got merged into <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">baseBranch</code> as the only changelog note.</p><p class="my-4 text-gray-800 dark:text-gray-300">But thanks to <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/intuit/auto/pull/359">this PR</a> that isn't true anymore! Now when you merge one PR to another both changes will be represented in the changelog.</p><div><img title="Clapping" srcset="https://i.giphy.com/media/l4HodBpDmoMA5p9bG/200w.webp" alt="Clapping" style="width:200px;margin:auto;cursor:pointer"></div><div style="text-align:center"><p class="my-4 text-gray-800 dark:text-gray-300"><em>Score!</em></p></div><hr class="m-12 border-b-2 dark:border-gray-700"><p class="my-4 text-gray-800 dark:text-gray-300">For example in <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/intuit/auto/pull/351">PR #351</a> we changed what happens when you call <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">shipit</code> from a PR. Previously if you called <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">shipit</code> it would create a new release and publish it to the <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">latest</code> tag. The PR made it so <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">shipit</code> would create a canary release when run in a PR and only publish to latest from the <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">master</code> branch.</p><p class="my-4 text-gray-800 dark:text-gray-300">Another <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/zephraph">contributor</a> to the project pointed out that some users might not be using <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">master</code> as their base branch, so the <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">baseBranch</code> should be configurable.</p><p class="my-4 text-gray-800 dark:text-gray-300">Instead of waiting for #351 to get merged to write the <code class="text-gray-700 bg-gray-200 rounded dark:bg-gray-800 dark:text-gray-200" style="padding:2px 6px">baseBranch</code> functionality, I could make a PR to #351 and both PRs would be represented in the changelog!</p><p class="my-4 text-gray-800 dark:text-gray-300"></p><div><img title="Sample release notes" srcset="/auto/../images/pr-to-pr.png" alt="Sample release notes" style="cursor:pointer"></div><p></p><hr class="m-12 border-b-2 dark:border-gray-700"><p class="my-4 text-gray-800 dark:text-gray-300">Now you can be a little more creative with how you manage large PR and have even more detailed changelogs.</p>]]></content:encoded>
            <author>lisowski54@gmail.com (Andrew Lisowski)</author>
            <enclosure url="https://images.unsplash.com/photo-1554520735-0a6b8b6ce8b7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1200&h=600&fit=crop&ixid=eyJhcHBfaWQiOjF9" length="0" type="image//photo-1554520735-0a6b8b6ce8b7"/>
        </item>
        <item>
            <title><![CDATA[Best of Both Worlds]]></title>
            <link>https://intuit.github.io/auto/blog/both-worlds</link>
            <guid>https://intuit.github.io/auto/blog/both-worlds</guid>
            <pubDate>Fri, 13 Mar 2020 06:00:02 GMT</pubDate>
            <content:encoded><![CDATA[<div class="mx-auto text-center flex flex-col items-center"><img src="//www.gravatar.com/avatar/ff725a631f869cdb78beeb003825bb40" class="rounded-full border-2 border-gray-200 dark:border-gray-900 w-12 h-12 -mt-12 mb-4"><h1 class="lvl1 text-3xl font-light mb-2 lg:mb-4 dark:text-gray-200">Best of Both Worlds</h1><p class="mb-6"><span class="dark:text-gray-300">Andrew Lisowski</span> <time class="text-gray-600 dark:text-gray-500" datetime="Thu, 12 Mar 2020 23:00:02 -0700">on <!-- -->Mar 12, 2020</time></p></div><p class="my-4 text-gray-800 dark:text-gray-300">One of the main goals we had when building auto was to ease the introduction to automated releases through using pull request labels.</p><p class="my-4 text-gray-800 dark:text-gray-300">The main alternative to auto works in a slightly different way, <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/semantic-release/semantic-release">semantic-release</a> uses the <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://www.conventionalcommits.org/en/v1.0.0-beta.4/">conventional commit spec</a> to calculate the next version. This is an awesome way to accomplish automated releases, but it is very strict and can create more work when accepting outside contribution. PR labels solve this problem beautifully, but...</p><div><img title="Why not both" srcset="https://i.giphy.com/media/cjYH0IhoWiQk8/giphy.webp" alt="Why not both" style="max-width:400px;width:100%;margin:30px auto;cursor:pointer"></div><p class="my-4 text-gray-800 dark:text-gray-300">That's exactly why we made the <a class="focus-visible:ring ring-offset-2 focus:outline-none rounded underline cursor-pointer text-gray-800 dark:text-gray-300" href="">conventional-commits plugin</a>. It allows you to keep your conventional commit work flow but still get the benefits of PR labels based automation.</p><p class="my-4 text-gray-800 dark:text-gray-300">To start using conventional commit style commit messages simply add the following to your auto config.</p><pre class="bg-gray-200 rounded border my-6 dark:bg-gray-800 dark:border-gray-700" style="margin-top:1.5rem;margin-bottom:1.5rem"><code class="language-json syntax-light text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#fff"><span style="color:#24292E">{</span>
<span style="color:#24292E">  </span><span style="color:#005CC5">"plugins"</span><span style="color:#24292E">: [</span><span style="color:#032F62">"conventional-commits"</span><span style="color:#24292E">]</span>
<span style="color:#24292E">}</span>
</code><code class="language-json syntax-light syntax-dark text-gray-600 rounded block py-8 px-6 overflow-auto dark:bg-gray-800" style="background:#24292e"><span style="color:#E1E4E8">{</span>
<span style="color:#E1E4E8">  </span><span style="color:#79B8FF">"plugins"</span><span style="color:#E1E4E8">: [</span><span style="color:#9ECBFF">"conventional-commits"</span><span style="color:#E1E4E8">]</span>
<span style="color:#E1E4E8">}</span>
</code></pre><p class="my-4 text-gray-800 dark:text-gray-300">Now you can enjoy the best of both worlds! 🎉</p>]]></content:encoded>
            <author>lisowski54@gmail.com (Andrew Lisowski)</author>
            <enclosure url="https://images.unsplash.com/photo-1554916171-0cfab61e5607?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1200&h=600&fit=crop&ixid=eyJhcHBfaWQiOjF9" length="0" type="image//photo-1554916171-0cfab61e5607"/>
        </item>
        <item>
            <title><![CDATA[Death to Monotony]]></title>
            <link>https://intuit.github.io/auto/blog/why</link>
            <guid>https://intuit.github.io/auto/blog/why</guid>
            <pubDate>Fri, 13 Mar 2020 06:00:02 GMT</pubDate>
            <content:encoded><![CDATA[<div class="mx-auto text-center flex flex-col items-center"><h1 class="lvl1 text-3xl font-light mb-2 lg:mb-4 dark:text-gray-200">Death to Monotony</h1><p class="mb-6"><span class="dark:text-gray-300">Adam Dierkens</span> <time class="text-gray-600 dark:text-gray-500" datetime="Thu, 12 Mar 2020 23:00:02 -0700">on <!-- -->Mar 12, 2020</time></p></div><h1 class="lvl1 break-words relative text-3xl font-semibold mb-4 md:mb-8 lg:text-4xl text-gray-900 dark:text-gray-200" id="how-auto-can-handle-the-rest-for-you"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#how-auto-can-handle-the-rest-for-you">How auto can "handle the rest for you"</a></h1><p class="my-4 text-gray-800 dark:text-gray-300">I've been a front-end engineer at Intuit in San Diego for the past three years.
As one of three members of Intuit's Player team, we are responsible for delivering a JavaScript framework dedicated to rendering most of a user's experience in <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://turbotax.intuit.com/">TurboTax</a>.
We end up releasing a lot of code, usually React components, quite frequently to our internal node package manager (npm) instance.
It's not uncommon for us to hit double-digit releases in a single day.
This means lots of version bumps, release notes, changelogs, Jira tickets, Slack announcements, and all the other goodies that come with communicating to dependent teams, that their bug is now fixed, or a new feature is ready for them to use.
While none of these steps are intrinsically difficult, the time commitment adds up quickly, so we wrote auto: a tool to <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/intuit/auto">auto-generate releases based on semantic version labels</a>.</p><hr class="m-12 border-b-2 dark:border-gray-700"><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="the-problem"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#the-problem">The Problem</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">Historically, our release process involved a lot of manual labor.
Before publishing an update to npm, someone on the team had to gather all of the changes merged since our last release, write up a changelog, and figure out what the next version was going to be.
This often involved a lot of back and forth between GitHub and Jira.
Once we had all of that, we could create a release, publish it to npm, document it in GitHub, and post an update to our team's Slack channel.
These 6-7 monotonous tasks were needed for each release, which easily took up to 30-60 minutes out of our day.</p><p class="my-4 text-gray-800 dark:text-gray-300">To distribute the pain, each month we would nominate someone as the release marshal, who inherited the responsibilities of handling all of the release tasks.
It was an inefficient, joyless process that we all resented.
Something needed to change.</p><hr class="m-12 border-b-2 dark:border-gray-700"><h2 class="lvl2 break-words relative text-2xl font-normal border-b border-gray-300 pb-2 mb-4 mt-6 md:mb-6 lg:text-3xl lg:mt-8 mb:pb-4 dark:border-gray-700 text-gray-900 dark:text-gray-200" id="the-solution"><a class="focus-visible:ring ring-offset-2 focus:outline-none rounded header-link no-underline text-gray-900&quot; hover:underline" href="#the-solution">The Solution</a></h2><p class="my-4 text-gray-800 dark:text-gray-300">Auto started as a simple Node script that made a few requests to the GitHub API.
It gathered the commits merged from the last release and posted those to GitHub.
We still had some manual steps in the release process, but it was the start of the end of the monotony.</p><p class="my-4 text-gray-800 dark:text-gray-300">I brought in another engineer on my team, <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://www.linkedin.com/in/andrew-lisowski-8b419977/">Andrew Lisowski</a>, and we spent the next few months building out the script into a proper npm module.
We gave it a well-defined API comprised of small atomic operations that could handle all parts of the release.
With auto, the new process is entirely hands-off — simply hit "merge", and everything happens automatically.</p><p class="my-4 text-gray-800 dark:text-gray-300">We initially crafted auto to solve for our team's specific release process — which needed to post comments and statuses back to a pull request, generate release notes based on what was merged, and document these releases on GitHub and Slack.
We eliminated the need for a dedicated release marshal, instead opting for each engineer to annotate their pull requests with a proper semantic version label.
Auto would then take it from there, deploying and documenting the release without the need for manual intervention.
After dogfooding auto internally for about six months, there was a lot of interest from outside teams, and we knew each of them had slightly different release pipelines, so we worked to make it reusable and customizable for anyone that wanted to use it.</p><p class="my-4 text-gray-800 dark:text-gray-300">Andrew and I had been talking about using TypeScript for a while and decided that this was a perfect project to start out.
By bringing static type-checking to our JavaScript code, refactoring became much less painful, as types quickly caught would-be bugs much sooner.
Since writing auto, we've made it a point to use TypeScript as our de facto language in any new project we create, including many of the front-end components used in TurboTax today.</p><p class="my-4 text-gray-800 dark:text-gray-300">Inspired by the power and modularity of webpack's plugin architecture, we brought in their tap-able module, the core code that powers their plugins.
Andrew and I spent about a month slowly refactoring the code to leverage the plugin-based architecture you see today.
It went live on <a class="underline cursor-pointer text-gray-800 dark:text-gray-300 focus:outline-none focus-visible:ring" href="https://github.com/intuit/auto">GitHub</a> in December 2018 and has since attracted several outside contributors.</p><p class="my-4 text-gray-800 dark:text-gray-300">Andrew was also getting more involved in the open source community at Intuit, and auto seemed like a great fit for a project to release next — any work that we'd need to do to make auto pluggable for teams inside of Intuit also meant that teams outside of Intuit could leverage it.</p><p class="my-4 text-gray-800 dark:text-gray-300">While a few libraries with similar capabilities already exist, we had yet to identify one that truly met our needs.
Packages such as semantic-release were a great inspiration to auto-calculate a version bump based on merged changes, but require a significant change to a developer's workflow, something we weren't prepared to enforce.</p><p class="my-4 text-gray-800 dark:text-gray-300">Auto's philosophy is to compose each part of the release pipeline into a series of plugins, allowing it to handle a bunch of different use-cases out of the box.
Ultimately it boils down to two commands: "auto init" to get started and "auto shipit" to release.
Anyone can write a plugin for any part of the release process and add their own custom handlers, without having to change the core system.
If instead of publishing to npm, you want to publish an extension to the Chrome Web Store, simply enable that plugin and auto will handle the rest for you.</p><p class="my-4 text-gray-800 dark:text-gray-300">We were pleasantly surprised by how quickly auto was picked up by the community.
It filled a niche that the existing libraries didn't quite cover.
By using labels — instead of specially formatted commit messages required by some existing solutions — we were able to significantly lower the barriers to entry for auto.
Auto doesn't impede the developer workflow — just throw a label on a pull request and continue to focus on code.</p><p class="my-4 text-gray-800 dark:text-gray-300">Working on auto from the start has been an amazing experience — not only did it help our team, but it's awesome to see other teams integrating it into their releases.
I'm really happy that we got to share it with the open source community and am excited to see where the future takes it next.</p>]]></content:encoded>
            <enclosure url="https://cdn-images-1.medium.com/max/800/1*TVSbt7qsyleNiQ84la_log.jpeg" length="0" type="image/jpeg"/>
        </item>
    </channel>
</rss>